'use client';

import { useState } from 'react';
import axios from 'axios';

interface ParamGroup {
  type: 'analytics' | 'navigation' | 'content';
  params: string[];
  paths: string[];
}

interface Result {
  groups: {
    analytics: string[];
    navigation: { [path: string]: string[] };
    content: string[];
  };
  directives: string[];
  warnings: string[];
}

export default function CleanParamPage() {
  const [urls, setUrls] = useState('');
  const [result, setResult] = useState<Result | null>(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setError('');
    setResult(null);
    
    try {
      const response = await axios.post('/api/clean-param', {
        urls: urls.split('\n').filter(u => u.trim())
      });
      
      setResult(response.data);
    } catch (err: any) {
      setError(err.response?.data?.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ URL');
    } finally {
      setLoading(false);
    }
  };

  const copyToClipboard = (text: string) => {
    navigator.clipboard.writeText(text);
    alert('–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
  };

  const robotsTxt = result ? `User-agent: Yandex\n${result.directives.join('\n')}` : '';

  return (
    <div className="min-h-screen bg-gray-50 p-4 md:p-8">
      <div className="max-w-7xl mx-auto">
        <div className="mb-8">
          <h1 className="text-3xl md:text-4xl font-bold text-gray-900 mb-2">
            –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä Clean-param –¥–ª—è robots.txt
          </h1>
          <p className="text-gray-600">
            –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ GET-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∏—Ä–µ–∫—Ç–∏–≤ –¥–ª—è –Ø–Ω–¥–µ–∫—Å–∞
          </p>
        </div>
        
        <div className="grid md:grid-cols-2 gap-8">
          {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –≤–≤–æ–¥ */}
          <div className="bg-white rounded-lg shadow-md p-6">
            <h2 className="text-xl font-semibold mb-4 text-gray-800">–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h2>
            
            <form onSubmit={handleSubmit} className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –°–ø–∏—Å–æ–∫ URL (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É)
                </label>
                <textarea
                  value={urls}
                  onChange={(e) => setUrls(e.target.value)}
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent font-mono text-sm"
                  placeholder="https://site.ru/catalog?page=2&sort=asc&#10;https://site.ru/catalog?page=3&sort=desc&#10;https://site.ru/product?id=123&utm_source=yandex"
                  rows={12}
                  required
                />
                <p className="text-xs text-gray-500 mt-1">
                  –í—Å—Ç–∞–≤—å—Ç–µ URL —Å GET-–ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
                </p>
              </div>
              
              <button
                type="submit"
                disabled={loading}
                className="w-full px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed font-medium transition-colors"
              >
                {loading ? '–ê–Ω–∞–ª–∏–∑...' : '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–∏–≤—ã'}
              </button>
            </form>

            {error && (
              <div className="mt-4 p-4 bg-red-50 border border-red-200 rounded-lg">
                <p className="text-red-800">{error}</p>
              </div>
            )}

            {/* –°–ø—Ä–∞–≤–∫–∞ */}
            <div className="mt-8 p-4 bg-blue-50 rounded-lg">
              <h3 className="font-semibold text-blue-900 mb-2">üí° –ß—Ç–æ –¥–µ–ª–∞–µ—Ç Clean-param?</h3>
              <ul className="text-sm text-blue-800 space-y-1">
                <li>‚Ä¢ –£–∫–∞–∑—ã–≤–∞–µ—Ç –Ø–Ω–¥–µ–∫—Å—É –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã</li>
                <li>‚Ä¢ –£–º–µ–Ω—å—à–∞–µ—Ç –¥—É–±–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü –≤ –∏–Ω–¥–µ–∫—Å–µ</li>
                <li>‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—Ç –∫—Ä–∞—É–ª–∏–Ω–≥–æ–≤—ã–π –±—é–¥–∂–µ—Ç</li>
                <li>‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –Ø–Ω–¥–µ–∫—Å–∞ (–Ω–µ –¥–ª—è Google)</li>
              </ul>
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - —Ä–µ–∑—É–ª—å—Ç–∞—Ç */}
          {result && (
            <div className="space-y-6">
              {/* –ì–æ—Ç–æ–≤—ã–π –±–ª–æ–∫ –¥–ª—è robots.txt */}
              <div className="bg-white rounded-lg shadow-md p-6">
                <div className="flex justify-between items-center mb-4">
                  <h2 className="text-xl font-semibold text-gray-800">
                    üéØ –ì–æ—Ç–æ–≤—ã–π –±–ª–æ–∫ –¥–ª—è robots.txt
                  </h2>
                  <button
                    onClick={() => copyToClipboard(robotsTxt)}
                    className="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 text-sm font-medium"
                  >
                    üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                  </button>
                </div>
                
                <pre className="bg-gray-900 text-green-400 p-4 rounded-lg overflow-x-auto text-sm font-mono">
{robotsTxt}
                </pre>
              </div>

              {/* –¢–∞–±–ª–∏—Ü–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π */}
              <div className="bg-white rounded-lg shadow-md p-6">
                <h2 className="text-xl font-semibold text-gray-800 mb-4">
                  üìä –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
                </h2>
                
                <div className="space-y-4">
                  {/* –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ */}
                  {result.groups.analytics.length > 0 && (
                    <div className="border-l-4 border-green-500 pl-4">
                      <h3 className="font-semibold text-gray-900 mb-2">
                        üü¢ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –º–µ—Ç–∫–∏
                      </h3>
                      <p className="text-sm text-gray-600 mb-2">
                        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {result.groups.analytics.join(', ')}
                      </p>
                      <p className="text-xs text-gray-500">
                        –ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫–æ –≤—Å–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º. –ë–µ–∑–æ–ø–∞—Å–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å.
                      </p>
                    </div>
                  )}

                  {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
                  {Object.keys(result.groups.navigation).length > 0 && (
                    <div className="border-l-4 border-yellow-500 pl-4">
                      <h3 className="font-semibold text-gray-900 mb-2">
                        üü° –ù–∞–≤–∏–≥–∞—Ü–∏—è –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
                      </h3>
                      {Object.entries(result.groups.navigation).map(([path, params]) => (
                        <div key={path} className="mb-2">
                          <p className="text-sm text-gray-600">
                            –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {params.join(', ')}
                          </p>
                          <p className="text-xs text-gray-500">
                            –ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫: {path}
                          </p>
                        </div>
                      ))}
                    </div>
                  )}

                  {/* –°–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω—ã–µ */}
                  {result.groups.content.length > 0 && (
                    <div className="border-l-4 border-red-500 pl-4">
                      <h3 className="font-semibold text-gray-900 mb-2">
                        üî¥ –°–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
                      </h3>
                      <p className="text-sm text-gray-600 mb-2">
                        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {result.groups.content.join(', ')}
                      </p>
                      <p className="text-xs text-red-600">
                        –ù–ï –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –¥–∏—Ä–µ–∫—Ç–∏–≤—ã, —Ç.–∫. –≤–ª–∏—è—é—Ç –Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
                      </p>
                    </div>
                  )}
                </div>
              </div>

              {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è */}
              {result.warnings.length > 0 && (
                <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                  <h3 className="font-semibold text-yellow-900 mb-2">‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è</h3>
                  <ul className="text-sm text-yellow-800 space-y-1">
                    {result.warnings.map((warning, i) => (
                      <li key={i}>‚Ä¢ {warning}</li>
                    ))}
                  </ul>
                </div>
              )}

              {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
              <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                <h3 className="font-semibold text-blue-900 mb-2">üìö –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h3>
                <ul className="text-sm text-blue-800 space-y-2">
                  <li>‚úì –î–∏—Ä–µ–∫—Ç–∏–≤–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –Ø–Ω–¥–µ–∫—Å–∞</li>
                  <li>‚úì –ù–µ –∑–∞–º–µ–Ω—è–µ—Ç canonical - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±–∞ –º–µ—Ç–æ–¥–∞</li>
                  <li>‚úì –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –Ø–Ω–¥–µ–∫—Å.–í–µ–±–º–∞—Å—Ç–µ—Ä–µ —á–µ—Ä–µ–∑ 1-2 –Ω–µ–¥–µ–ª–∏</li>
                  <li>‚úì –õ–∏–º–∏—Ç 500 —Å–∏–º–≤–æ–ª–æ–≤ –Ω–∞ –æ–¥–Ω—É –¥–∏—Ä–µ–∫—Ç–∏–≤—É</li>
                </ul>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
}
